#summary Key concepts of Intel interrupts and exceptions

== Introduction ==

Interrupts and exceptions are closely related in Intel architecture and their handling is very similar.

There are two types of interrupts:
  * Maskable
  * Unmaskable

There are two types of exceptions:
  * Processor detected (They can also be classified into faults, traps and aborts)
  * Programmed (The exceptions can be trigerred by INT 0, INT 2, INT n commands)

There are three types of exceptions:
  # *Faults* are exceptions that are reported *"before" the instruction* causing the exception. *Permits restart* of the instruction.
  # *Traps* are exceptions that are reported immediately *after the instruction* in which the exception was detected.
  # *Aborts* are exceptions that permits *neither precise location nor restart* of the program that caused the exception. Aborts are used to report severe errors, such as hardware errors and inconsistent or illegal values in system tables.


==Terminology ==

ISR - Interrupt Service Routine: The code that is executed when interrupt happens.

IRQ - Interrupt request: The hardware interrupt, controlled by PIC.

PIC - Programmable interrupt controller: It is a chip that manages IRQs. Also it can be programmed to assign IRQs the Interrupt numbers the user wants.

NMI - Non maskable interrupt

IDT - Interrupt descriptor table

_Note: For me(zv) there is some confusion about all this terminology. For example: is the code executed when exception happens an ISR or not? The exception is not classified as interrupt (see introduction), but also can be executed by INT command and the execution code is reference in IDT (interrupt descriptor table).

== Interrupt descriptor table ==

Assembler command LIDT loads address of IDT descriptor to IDT register. This descriptor is pointing to IDT. IDT has several gates. Each gate has a descriptor which points to particular ISR.

{{{

                                              INTERRUPT DESCRIPTOR TABLE
                                              +------+-----+-----+------+
                                        +---->|      |     |     |      |
                                        |     |- GATE FOR INTERRUPT #N -|
                                        |     |      |     |     |      |
                                        |     +------+-----+-----+------+
                                        |     *                         *
                                        |     *                         *
                                        |     *                         *
                                        |     +------+-----+-----+------+
                                        |     |      |     |     |      |
                                        |     |- GATE FOR INTERRUPT #2 -|
                                        |     |      |     |     |      |
                                        |     |------+-----+-----+------|
            IDT REGISTER                |     |      |     |     |      |
                                        |     |- GATE FOR INTERRUPT #1 -|
                    15            0     |     |      |     |     |      |
                   +---------------+    |     |------+-----+-----+------|
                   |   IDT LIMIT   |----+     |      |     |     |      |
  +----------------+---------------|          |- GATE FOR INTERRUPT #0 -|
  |            IDT BASE            |--------->|      |     |     |      |
  +--------------------------------+          +------+-----+-----+------+
   31                             0
}}}

IDT can contain:

  * Trap gates
  * Task gates
  * Interrupt gates

Only interrupt gates will be covered in this document.

The structure of an interrupt gate descriptor:
{{{
                              80386 INTERRUPT GATE
   31                23                15                7                0
  +-----------------+-----------------+---+---+---------+-----+-----------+
  |           OFFSET 31..16           | P |DPL|0 1 1 1 0|0 0 0|(NOT USED) |4
  |-----------------------------------+---+---+---------+-----+-----------|
  |             SELECTOR              |           OFFSET 15..0            |0
  +-----------------+-----------------+-----------------+-----------------+
}}}

P - is the entry present?

DPL - execution ring

References:
  # [http://www.logix.cz/michal/doc/i386/chp09-00.htm Intel 80386 Programmer's Reference Manual: 9 Interrupts and exceptions]